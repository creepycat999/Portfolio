{"ast":null,"code":"var _jsxFileName = \"/Users/arianaclark/Desktop/UIUX/Development/Development/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nitemInformation.forEach(item => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction total(count, setCount, item) {\n  setCount(count + item.price);\n}\nfunction addBaked(cart, setCart, item) {\n  setCart(cart + item.name + \", \");\n}\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [count, setCount] = useState(0);\n  const [cart, setCart] = useState([]);\n  //const listItems = cart.map((d) => <li key={d.name}></li>);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Baked Bakery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data.map((item, index) =>\n    // TODO: map bakeryData to BakeryItem components\n    [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [data(item), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this),\n    /*#__PURE__*/\n    // replace with BakeryItem component\n    _jsxDEV(\"button\", {\n      onClick: () => {\n        total(count, setCount, item);\n        addBaked(cart, setCart, item);\n      },\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Total: $\", count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6itP1M0THJSKkeJN9rbpjqKasus=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","itemInformation","forEach","item","image","process","env","PUBLIC_URL","total","count","setCount","price","addBaked","cart","setCart","name","App","data","map","index"],"sources":["/Users/arianaclark/Desktop/UIUX/Development/Development/src/App.js"],"sourcesContent":["\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nitemInformation.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction total(count, setCount, item){\n  setCount(count + (item.price))\n}\nfunction addBaked(cart, setCart, item){\n  setCart(cart + (item.name) + \", \")\n}\n\nfunction App() {\n\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [count, setCount] = useState(0);\n  const [cart, setCart] = useState([]);\n  //const listItems = cart.map((d) => <li key={d.name}></li>);\n\n  return (\n    <div className=\"App\">\n      <h1>Baked Bakery</h1>\n        {/* TODO: personalize your bakery (if you want) */}\n        {data.map((item, index) => \n        ( // TODO: map bakeryData to BakeryItem components\n          [<p>{data(item)} </p>, // replace with BakeryItem component\n          <button onClick={() => {\n            total(count, setCount, item); \n            addBaked(cart, setCart, item);\n          }}>Add to Cart</button>] ))}\n        \n      <div>\n        <h2>Cart:</h2>\n        <p>{cart}</p>\n        <div>\n\t\t\t    <h2>Total: ${count}</h2>\n\t\t    </div>\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA;AACAC,eAAe,CAACC,OAAO,CAAEC,IAAI,IAAK;EAChCA,IAAI,CAACC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGJ,IAAI,CAACC,KAAK;AACxD,CAAC,CAAC;AACF;;AAEA,SAASI,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAEP,IAAI,EAAC;EACnCO,QAAQ,CAACD,KAAK,GAAIN,IAAI,CAACQ,KAAM,CAAC;AAChC;AACA,SAASC,QAAQ,CAACC,IAAI,EAAEC,OAAO,EAAEX,IAAI,EAAC;EACpCW,OAAO,CAACD,IAAI,GAAIV,IAAI,CAACY,IAAK,GAAG,IAAI,CAAC;AACpC;AAEA,SAASC,GAAG,GAAG;EAAA;EAEb;EACA;EACA,MAAM,CAACP,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,EAElBiB,IAAI,CAACC,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK;IACpB;IACA,cAAC;MAAA,WAAIF,IAAI,CAACd,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;IAAA;IAAE;IACvB;MAAQ,OAAO,EAAE,MAAM;QACrBK,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAEP,IAAI,CAAC;QAC5BS,QAAQ,CAACC,IAAI,EAAEC,OAAO,EAAEX,IAAI,CAAC;MAC/B,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,CAAG,CAAC,eAE/B;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd;QAAA,UAAIU;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb;QAAA,uBACD;UAAA,uBAAaJ,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ;AAAC,GA7BQO,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}